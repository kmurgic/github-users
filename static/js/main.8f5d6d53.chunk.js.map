{"version":3,"sources":["components/Header/index.jsx","components/User/index.jsx","components/LoadingSpinner/index.jsx","components/LoadingEllipsis/index.jsx","components/UserList/index.jsx","components/Repository/index.jsx","components/RepositoryList/index.jsx","components/UserProfile/index.jsx","api/fetchFromGithubApi.js","api/fetchUsers.js","api/fetchRepositories.js","api/fetchFollowers.js","components/NotFound/index.jsx","components/App/index.jsx","index.jsx"],"names":["Header","props","currentSearch","search","useState","searchTerm","setSearchTerm","location","useLocation","useEffect","className","to","process","onChange","e","target","value","onFocus","currentTarget","select","placeholder","type","onClick","preventDefault","icon","faSearch","trim","User","memo","imgUrl","isProfile","userClass","username","url","containerClass","alt","src","href","rel","defaultProps","LoadingSpinner","LoadingEllipsis","UserList","isFollowerList","loading","filteredUsers","users","filter","user","toLowerCase","includes","noResultsText","showNoResultsText","length","showLoadingSpinner","showLoadingEllipsis","map","key","id","Repository","watchers","forks","link","name","description","faEye","faCodeBranch","RepositoryList","filteredRepos","repositories","repo","UserProfile","followers","followersLoading","repositoriesLoading","useRouteMatch","useParams","shrinkHeader","setShrinkHeader","adjustProfileImagePosition","scrollPosition","document","documentElement","scrollTop","addEventListener","removeEventListener","find","u","followerTabSelected","followersTabClass","repositoriesTabClass","headerClass","profileUserClass","data-testid","path","fetchFromGithubApi","a","headers","authorization","fetch","response","status","json","data","linkHeader","get","parsedLinkHeader","parse","nextUrl","next","error","fetchUsers","userList","avatar_url","html_url","login","fetchRepositories","repositoriesList","repository","fetchFollowers","followersList","NotFound","App","searchTermRef","useRef","usersLoading","setUsersLoading","setUsers","nextUserUrl","setNextUserUrl","setRepositoriesLoading","setRepositories","repositoriesForSelectedUser","setRepositoriesForSelectedUser","setFollowersLoading","setFollowers","followersForSelectedUser","setFollowersForSelectedUser","current","getNumberOfHiddenItems","documentEl","hiddenHeight","scrollHeight","clientHeight","Math","ceil","previousUserUrl","previousRepositoriesUrl","previousFollowersUrl","handleError","console","isFollowersPage","test","pathname","isRepositoriesPage","fetchMoreUsersIfNeeded","repeatUrl","prev","fetchMoreRepositoriesIfNeeded","lastSlash","lastIndexOf","penultimateSlash","selectedUser","slice","list","firstFetchUrl","nextRepositoriesUrl","prevRepositories","newRepositories","fetchMoreFollowersIfNeeded","nextFollowersUrl","prevFollowers","newFollowers","fetchMoreIfNeeded","log","newSearchTerm","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f5d6d53.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\nimport './index.css';\n\nconst Header = (props) => {\n  const { currentSearch, search } = props;\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const location = useLocation();\n\n  // Reset search whenever user changes pages\n  useEffect(() => {\n    setSearchTerm('');\n  }, [location]);\n\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleInputFocus = (e) => {\n    e.currentTarget.select();\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    search(searchTerm);\n  };\n\n  const handleClear = () => {\n    setSearchTerm('');\n    search('');\n  };\n\n  return (\n    <div className=\"Header\">\n      <h1 className=\"Header__title\"><Link className=\"Header__link\" to={`${process.env.PUBLIC_URL}`}>Github User List</Link></h1>\n      <form className=\"Header__form\">\n        <input\n          className=\"Header__input\"\n          onChange={handleChange}\n          onFocus={handleInputFocus}\n          placeholder=\"Search...\"\n          type=\"search\"\n          value={searchTerm}\n        />\n        <button\n          className=\"Header__icon-button\"\n          onClick={handleSubmit}\n          type=\"submit\"\n        >\n          <FontAwesomeIcon className=\"Header__icon\" icon={faSearch} />\n        </button>\n      </form>\n      <p className=\"Header__search-text\">\n        {currentSearch.trim() && (\n          <>\n            {`Displaying search results for \"${currentSearch}\"`}\n            {' '}\n            <button className=\"Header__clear-button\" onClick={handleClear} type=\"button\">clear</button>\n          </>\n        )}\n      </p>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  currentSearch: PropTypes.string.isRequired,\n  search: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './index.css';\n\nconst User = memo((props) => {\n  const {\n    imgUrl, isProfile, userClass, username, url,\n  } = props;\n  const containerClass = userClass || 'User';\n  return (\n    <div className={containerClass}>\n      <div className=\"User__image-container\">\n        {imgUrl && <img alt={`Avatar for ${username}`} className=\"User__image\" src={imgUrl} />}\n      </div>\n      <div className=\"User__username-container\">\n        {isProfile && <a className=\"User__username\" href={url} rel=\"noopener noreferrer\" target=\"_blank\">{username}</a>}\n        {username && !isProfile && <Link className=\"User__username\" to={`${process.env.PUBLIC_URL}/${username}/repositories`}>{username}</Link>}\n      </div>\n    </div>\n  );\n});\n\nUser.defaultProps = {\n  userClass: '',\n  isProfile: false,\n  url: '',\n};\n\nUser.propTypes = {\n  userClass: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  isProfile: PropTypes.bool,\n  username: PropTypes.string.isRequired,\n  url: PropTypes.string,\n};\n\nexport default User;\n","/* Loading Spinner from https://loading.io/css/ */\n\nimport React from 'react';\nimport './index.css';\n\nconst LoadingSpinner = () => (\n  <div className=\"lds-spinner\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingSpinner;\n","/* Loading Ellipsis from https://loading.io/css/ */\n\nimport React from 'react';\nimport './index.css';\n\nconst LoadingEllipsis = () => (\n  <div className=\"lds-ellipsis\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingEllipsis;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User';\nimport LoadingSpinner from '../LoadingSpinner';\nimport LoadingEllipsis from '../LoadingEllipsis';\nimport './index.css';\n\nconst UserList = (props) => {\n  const {\n    isFollowerList, loading, searchTerm, users,\n  } = props;\n  const containerClass = isFollowerList ? 'UserList--followers' : 'UserList';\n  const filteredUsers = users.filter((user) => (\n    user.username.toLowerCase().includes(searchTerm.toLowerCase().trim())\n  ));\n\n  const noResultsText = `No matching ${isFollowerList ? 'followers' : 'users'}`;\n  const showNoResultsText = ((searchTerm || !loading) && !filteredUsers.length);\n\n  /*  Search page is static since we are only filtering previously retrieved results, not searching\n      the API. Therefore, no loading spinners should be shown when a search is in progress */\n  const showLoadingSpinner = !searchTerm && loading && !filteredUsers.length;\n  const showLoadingEllipsis = !searchTerm && loading && !!filteredUsers.length;\n\n  return (\n    <div className={containerClass}>\n      {showNoResultsText && <p>{noResultsText}</p>}\n      {filteredUsers.map((user) => (\n        <User key={user.id} imgUrl={user.imgUrl} username={user.username} />\n      ))}\n      {showLoadingSpinner && <LoadingSpinner />}\n      {showLoadingEllipsis && <LoadingEllipsis />}\n    </div>\n  );\n};\n\nUserList.defaultProps = {\n  isFollowerList: false,\n};\n\nUserList.propTypes = {\n  isFollowerList: PropTypes.bool,\n  searchTerm: PropTypes.string.isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      imgUrl: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default UserList;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faCodeBranch } from '@fortawesome/free-solid-svg-icons';\nimport './index.css';\n\nconst Repository = memo((props) => {\n  const {\n    watchers, forks, link, name, description,\n  } = props;\n  return (\n    <div className=\"Repository\">\n      <h4 className=\"Repository__title\">\n        <a className=\"Repository__link\" href={link} rel=\"noopener noreferrer\" target=\"_blank\">{name}</a>\n      </h4>\n      <p className=\"Repository__description\">{description}</p>\n      <div className=\"Repository__statistics\">\n        <span className=\"Repository__watchers\">\n          <FontAwesomeIcon className=\"Repository__icon\" icon={faEye} />\n          <span className=\"Repository__count\">{watchers}</span>\n        </span>\n        <span className=\"Repository__forks\">\n          <FontAwesomeIcon className=\"Repository__icon\" icon={faCodeBranch} />\n          <span className=\"Repository__count\">{forks}</span>\n        </span>\n      </div>\n    </div>\n  );\n});\n\nRepository.propTypes = {\n  description: PropTypes.string.isRequired,\n  forks: PropTypes.number.isRequired,\n  link: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  watchers: PropTypes.number.isRequired,\n};\n\nexport default Repository;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Repository from '../Repository';\nimport LoadingSpinner from '../LoadingSpinner';\nimport LoadingEllipsis from '../LoadingEllipsis';\nimport './index.css';\n\nconst RepositoryList = (props) => {\n  const { loading, searchTerm, repositories } = props;\n  const filteredRepos = repositories.filter((repo) => (\n    repo.name.toLowerCase().includes(searchTerm.toLowerCase().trim())\n  ));\n\n  const showNoResultsText = ((searchTerm || !loading) && !filteredRepos.length);\n\n  /*  Search page is static since we are only filtering previously retrieved results, not searching\n      the API. Therefore, no loading spinners should be shown when a search is in progress */\n  const showLoadingSpinner = !searchTerm && loading && !filteredRepos.length;\n  const showLoadingEllipsis = !searchTerm && loading && !!filteredRepos.length;\n\n  return (\n    <div className=\"RepositoryList\">\n      {showNoResultsText && <p>No matching repositories</p>}\n      {filteredRepos.map((repo) => (\n        <Repository\n          key={repo.id}\n          description={repo.description}\n          forks={repo.forks}\n          link={repo.link}\n          name={repo.name}\n          watchers={repo.watchers}\n        />\n      ))}\n      {showLoadingSpinner && <LoadingSpinner />}\n      {showLoadingEllipsis && <LoadingEllipsis />}\n    </div>\n  );\n};\n\nRepositoryList.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      description: PropTypes.string.isRequired,\n      forks: PropTypes.number.isRequired,\n      link: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      watchers: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default RepositoryList;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useParams, Link, useRouteMatch, Switch, Route,\n} from 'react-router-dom';\nimport User from '../User';\nimport RepositoryList from '../RepositoryList';\nimport UserList from '../UserList';\nimport './index.css';\n\nconst UserProfile = (props) => {\n  const {\n    followers, followersLoading, repositories, repositoriesLoading, searchTerm, users,\n  } = props;\n  const { url } = useRouteMatch();\n  const { username } = useParams();\n  const [shrinkHeader, setShrinkHeader] = useState(false);\n\n  useEffect(() => {\n    const adjustProfileImagePosition = () => {\n      const scrollPosition = document.documentElement.scrollTop;\n      if (!shrinkHeader && scrollPosition > 84) {\n        setShrinkHeader(true);\n      } else if (shrinkHeader && scrollPosition < 84) {\n        setShrinkHeader(false);\n      }\n    };\n    document.addEventListener('scroll', adjustProfileImagePosition);\n    return () => document.removeEventListener('scroll', adjustProfileImagePosition);\n  }, [shrinkHeader]);\n\n  const user = users.find((u) => u.username === username);\n  const followerTabSelected = !!useRouteMatch(`${url}/followers`);\n  const followersTabClass = followerTabSelected ? 'UserProfile__tab--active' : 'UserProfile__tab';\n  const repositoriesTabClass = followerTabSelected ? 'UserProfile__tab' : 'UserProfile__tab--active';\n  const containerClass = shrinkHeader ? 'UserProfile--shift-down' : 'UserProfile';\n  const headerClass = shrinkHeader ? 'UserProfile__header--small' : 'UserProfile__header';\n  const profileUserClass = shrinkHeader ? 'User--small-profile' : 'User--profile';\n\n  return (\n    <div className={containerClass}>\n      {!user && <p>User not found</p>}\n      {user && (\n        <>\n          <div className={headerClass} data-testid=\"user-profile-header\">\n            <User\n              imgUrl={user.imgUrl}\n              isProfile\n              url={user.url}\n              userClass={profileUserClass}\n              username={username}\n            />\n            <div className=\"UserProfile__tab-switcher\">\n              <Link className={repositoriesTabClass} to={`${url}/repositories`}>Repositories</Link>\n              <Link className={followersTabClass} to={`${url}/followers`}>Followers</Link>\n            </div>\n          </div>\n          <Switch>\n            <Route path={`${url}/followers`}>\n              <UserList\n                isFollowerList\n                loading={followersLoading}\n                searchTerm={searchTerm}\n                users={followers}\n              />\n            </Route>\n            <Route path={`${url}/repositories`}>\n              <RepositoryList\n                loading={repositoriesLoading}\n                searchTerm={searchTerm}\n                repositories={repositories}\n              />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </div>\n  );\n};\n\nUserProfile.propTypes = {\n  followers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      imgUrl: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  followersLoading: PropTypes.bool.isRequired,\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      description: PropTypes.string.isRequired,\n      forks: PropTypes.number.isRequired,\n      link: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      watchers: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  repositoriesLoading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      username: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default UserProfile;\n","import parse from 'parse-link-header';\n\nconst fetchFromGithubApi = async (url) => {\n  const token = process.env.REACT_APP_AUTH_TOKEN;\n  const headers = token ? { authorization: `token ${token}` } : {};\n  try {\n    const response = await fetch(url, { headers });\n    if (response.status < 200 || response.status >= 300) throw (response);\n    const data = await response.json();\n    const linkHeader = response.headers.get('Link');\n    const parsedLinkHeader = parse(linkHeader);\n    const nextUrl = (parsedLinkHeader.next || null) && parsedLinkHeader.next.url;\n    return { nextUrl, data };\n  } catch (error) {\n    return { error };\n  }\n};\n\nexport default fetchFromGithubApi;\n","import fetchFromGithubApi from './fetchFromGithubApi';\n\nconst fetchUsers = async (url) => {\n  const { nextUrl, data, error } = await fetchFromGithubApi(url || 'https://api.github.com/users');\n  if (error) {\n    return { error };\n  }\n  const userList = data.map((user) => ({\n    id: user.id,\n    imgUrl: user.avatar_url,\n    url: user.html_url,\n    username: user.login,\n  }));\n  return { nextUrl, userList };\n};\n\nexport default fetchUsers;\n","import fetchFromGithubApi from './fetchFromGithubApi';\n\nconst fetchRepositories = async (url) => {\n  const { nextUrl, data, error } = await fetchFromGithubApi(url);\n  if (error) {\n    return { error };\n  }\n  const repositoriesList = data.map((repository) => ({\n    id: repository.id,\n    description: repository.description || '',\n    forks: repository.forks,\n    link: repository.html_url,\n    name: repository.name,\n    watchers: repository.watchers,\n  }));\n  return { nextUrl, repositoriesList };\n};\n\nexport default fetchRepositories;\n","import fetchFromGithubApi from './fetchFromGithubApi';\n\nconst fetchFollowers = async (url) => {\n  const { nextUrl, data, error } = await fetchFromGithubApi(url);\n  if (error) {\n    return { error };\n  }\n  const followersList = data.map((user) => ({\n    id: user.id,\n    imgUrl: user.avatar_url,\n    url: user.html_url,\n    username: user.login,\n  }));\n  return { nextUrl, followersList };\n};\n\nexport default fetchFollowers;\n","import React from 'react';\nimport './index.css';\n\nconst NotFound = () => (\n  <div className=\"NotFound\">\n    <h1>Page not found.</h1>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Switch,\n  Route,\n  useLocation,\n  Redirect,\n} from 'react-router-dom';\nimport Header from '../Header';\nimport UserList from '../UserList';\nimport UserProfile from '../UserProfile';\nimport fetchUsers from '../../api/fetchUsers';\nimport fetchRepositories from '../../api/fetchRepositories';\nimport fetchFollowers from '../../api/fetchFollowers';\nimport NotFound from '../NotFound';\nimport './index.css';\n\nfunction App() {\n  const location = useLocation();\n  const [searchTerm, setSearchTerm] = useState('');\n  /* searchTermRef is needed to check search term from asynchronous code,\n    https://reactjs.org/docs/hooks-faq.html#why-am-i-seeing-stale-props-or-state-inside-my-function */\n  const searchTermRef = useRef('');\n\n  const [usersLoading, setUsersLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [nextUserUrl, setNextUserUrl] = useState('');\n\n  const [repositoriesLoading, setRepositoriesLoading] = useState(false);\n  const [repositories, setRepositories] = useState({});\n  const [repositoriesForSelectedUser, setRepositoriesForSelectedUser] = useState([]);\n\n  const [followersLoading, setFollowersLoading] = useState(false);\n  const [followers, setFollowers] = useState({});\n  const [followersForSelectedUser, setFollowersForSelectedUser] = useState([]);\n\n  const search = (newSearchTerm) => {\n    searchTermRef.current = newSearchTerm;\n    setSearchTerm(newSearchTerm);\n  };\n\n  // Reset search whenever user changes pages\n  useEffect(() => {\n    searchTermRef.current = '';\n    setSearchTerm('');\n  }, [location]);\n\n  const getNumberOfHiddenItems = () => {\n    const documentEl = document.documentElement;\n    const hiddenHeight = documentEl.scrollHeight - documentEl.clientHeight - documentEl.scrollTop;\n    return Math.ceil(hiddenHeight / 102);\n  };\n\n  const previousUserUrl = useRef(null);\n  const previousRepositoriesUrl = useRef(null);\n  const previousFollowersUrl = useRef(null);\n\n  // TODO: Better error handling\n  const handleError = (error) => console.error(error);\n\n  const followersPathRegex = /\\/[a-z\\d-]*\\/followers$/i;\n  const isFollowersPage = followersPathRegex.test(location.pathname);\n\n  const repositoriesPathRegex = /\\/[a-z\\d-]*\\/repositories$/i;\n  const isRepositoriesPage = repositoriesPathRegex.test(location.pathname);\n\n  useEffect(() => {\n    const fetchMoreUsersIfNeeded = async () => {\n      const repeatUrl = nextUserUrl === previousUserUrl.current;\n      if (!searchTermRef.current && !usersLoading && !repeatUrl && nextUserUrl !== null\n        && location.pathname === `${process.env.PUBLIC_URL}` && getNumberOfHiddenItems() < 100) {\n        previousUserUrl.current = nextUserUrl;\n        setUsersLoading(true);\n        const { error, nextUrl, userList } = await fetchUsers(nextUserUrl);\n        if (error) {\n          handleError(error);\n          return;\n        }\n        if (searchTermRef.current) return;\n        setNextUserUrl(nextUrl);\n        setUsers((prev) => [...prev, ...userList]);\n        setUsersLoading(false);\n      }\n    };\n    const fetchMoreRepositoriesIfNeeded = async () => {\n      if (!isRepositoriesPage) {\n        if (repositoriesForSelectedUser.length) {\n          setRepositoriesForSelectedUser([]);\n        }\n        return;\n      }\n      const lastSlash = location.pathname.lastIndexOf('/');\n      const penultimateSlash = location.pathname.lastIndexOf('/', lastSlash - 1);\n      const selectedUser = location.pathname.slice(penultimateSlash + 1, lastSlash);\n      setRepositoriesForSelectedUser(repositories[selectedUser]\n        ? repositories[selectedUser].list : []);\n      const firstFetchUrl = `https://api.github.com/users/${selectedUser}/repos`;\n      const nextRepositoriesUrl = repositories[selectedUser]\n        ? repositories[selectedUser].nextUrl : firstFetchUrl;\n      const repeatUrl = nextRepositoriesUrl === previousRepositoriesUrl.current;\n      if (!searchTermRef.current && !repositoriesLoading && !repeatUrl && nextRepositoriesUrl\n        && getNumberOfHiddenItems() < 100) {\n        previousRepositoriesUrl.current = nextRepositoriesUrl;\n        setRepositoriesLoading(true);\n        const { error, nextUrl, repositoriesList } = await fetchRepositories(nextRepositoriesUrl);\n        if (error) {\n          handleError(error);\n          return;\n        }\n        if (searchTermRef.current) return;\n        setRepositories((prev) => {\n          const prevRepositories = prev[selectedUser];\n          if (prevRepositories) {\n            const newRepositories = [...prevRepositories.list, ...repositoriesList];\n            setRepositoriesForSelectedUser(newRepositories);\n            return {\n              ...prev,\n              [selectedUser]: {\n                list: newRepositories,\n                nextUrl,\n              },\n            };\n          }\n          const newRepositories = repositoriesList;\n          setRepositoriesForSelectedUser(newRepositories);\n          return {\n            ...prev,\n            [selectedUser]: {\n              list: repositoriesList,\n              nextUrl,\n            },\n          };\n        });\n        setRepositoriesLoading(false);\n      }\n    };\n    const fetchMoreFollowersIfNeeded = async () => {\n      if (!isFollowersPage) {\n        if (followersForSelectedUser.length) {\n          setFollowersForSelectedUser([]);\n        }\n        return;\n      }\n      const lastSlash = location.pathname.lastIndexOf('/');\n      const penultimateSlash = location.pathname.lastIndexOf('/', lastSlash - 1);\n      const selectedUser = location.pathname.slice(penultimateSlash + 1, lastSlash);\n      setFollowersForSelectedUser(followers[selectedUser]\n        ? followers[selectedUser].list : []);\n      const firstFetchUrl = `https://api.github.com/users/${selectedUser}/followers`;\n      const nextFollowersUrl = followers[selectedUser]\n        ? followers[selectedUser].nextUrl : firstFetchUrl;\n      const repeatUrl = nextFollowersUrl === previousFollowersUrl.current;\n      if (!searchTermRef.current && !followersLoading && !repeatUrl && nextFollowersUrl\n        && getNumberOfHiddenItems() < 100) {\n        previousFollowersUrl.current = nextFollowersUrl;\n        setFollowersLoading(true);\n        const { error, nextUrl, followersList } = await fetchFollowers(nextFollowersUrl);\n        if (error) {\n          handleError(error);\n          return;\n        }\n        if (searchTermRef.current) return;\n        setFollowers((prev) => {\n          const prevFollowers = prev[selectedUser];\n          if (prevFollowers) {\n            const newFollowers = [...prevFollowers.list, ...followersList];\n            setFollowersForSelectedUser(newFollowers);\n            return {\n              ...prev,\n              [selectedUser]: {\n                list: newFollowers,\n                nextUrl,\n              },\n            };\n          }\n          const newFollowers = followersList;\n          setFollowersForSelectedUser(newFollowers);\n          return {\n            ...prev,\n            [selectedUser]: {\n              list: followersList,\n              nextUrl,\n            },\n          };\n        });\n        setFollowersLoading(false);\n      }\n    };\n    const fetchMoreIfNeeded = () => {\n      fetchMoreUsersIfNeeded();\n      fetchMoreRepositoriesIfNeeded();\n      fetchMoreFollowersIfNeeded();\n    };\n    fetchMoreIfNeeded();\n    document.addEventListener('scroll', fetchMoreIfNeeded);\n    return () => document.removeEventListener('scroll', fetchMoreIfNeeded);\n  }, [\n    location.pathname, nextUserUrl, searchTerm, usersLoading, users, repositoriesLoading,\n    followersLoading, repositories, followers, repositoriesForSelectedUser.length,\n    followersForSelectedUser.length, isRepositoriesPage, isFollowersPage,\n  ]);\n\n  if (!users.length && (isFollowersPage || isRepositoriesPage)) {\n    return (\n      <Redirect to={`${process.env.PUBLIC_URL}`} />\n    );\n  }\n\n  console.log(location.pathname);\n\n  if (location.pathname !== `${process.env.PUBLIC_URL}` && !isFollowersPage && !isRepositoriesPage) {\n    return (\n      <NotFound />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Header search={search} currentSearch={searchTerm} />\n      <Switch>\n        <Route exact path={`${process.env.PUBLIC_URL}`}>\n          <UserList loading={usersLoading} searchTerm={searchTerm} users={users} />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/:username`}>\n          <UserProfile\n            followers={followersForSelectedUser}\n            followersLoading={followersLoading}\n            repositories={repositoriesForSelectedUser}\n            repositoriesLoading={repositoriesLoading}\n            searchTerm={searchTerm}\n            users={users}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}